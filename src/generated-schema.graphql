type Query {
  User(id: String!, draft: Boolean): User
  Users(draft: Boolean, where: User_where, limit: Int, page: Int, sort: String): Users
  docAccessUser(id: String!): usersDocAccess
  meUser: usersMe
  initializedUser: Boolean
  CollectionA(id: String!, draft: Boolean): CollectionA
  CollectionAS(draft: Boolean, where: CollectionA_where, limit: Int, page: Int, sort: String): CollectionAS
  docAccessCollectionA(id: String!): collection_aDocAccess
  CollectionB(id: String!, draft: Boolean): CollectionB
  CollectionBS(draft: Boolean, where: CollectionB_where, limit: Int, page: Int, sort: String): CollectionBS
  docAccessCollectionB(id: String!): collection_bDocAccess
  PayloadPreference(id: String!, draft: Boolean): PayloadPreference
  PayloadPreferences(draft: Boolean, where: PayloadPreference_where, limit: Int, page: Int, sort: String): PayloadPreferences
  docAccessPayloadPreference(id: String!): payload_preferencesDocAccess
  Access: Access
}

type User {
  id: String
  updatedAt: DateTime
  createdAt: DateTime
  email: EmailAddress!
  resetPasswordToken: String
  resetPasswordExpiration: DateTime
  salt: String
  hash: String
  loginAttempts: Float
  lockUntil: DateTime
  password: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
A field whose value conforms to the standard internet email address format as specified in HTML Spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address.
"""
scalar EmailAddress @specifiedBy(url: "https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address")

type Users {
  docs: [User]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input User_where {
  updatedAt: User_updatedAt_operator
  createdAt: User_createdAt_operator
  email: User_email_operator
  id: User_id_operator
  AND: [User_where_and]
  OR: [User_where_or]
}

input User_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input User_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input User_email_operator {
  equals: EmailAddress
  not_equals: EmailAddress
  like: EmailAddress
  contains: EmailAddress
  in: [EmailAddress]
  not_in: [EmailAddress]
  all: [EmailAddress]
}

input User_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input User_where_and {
  updatedAt: User_updatedAt_operator
  createdAt: User_createdAt_operator
  email: User_email_operator
  id: User_id_operator
  AND: [User_where_and]
  OR: [User_where_or]
}

input User_where_or {
  updatedAt: User_updatedAt_operator
  createdAt: User_createdAt_operator
  email: User_email_operator
  id: User_id_operator
  AND: [User_where_and]
  OR: [User_where_or]
}

type usersDocAccess {
  fields: UsersDocAccessFields
  create: UsersCreateDocAccess
  read: UsersReadDocAccess
  update: UsersUpdateDocAccess
  delete: UsersDeleteDocAccess
  unlock: UsersUnlockDocAccess
}

type UsersDocAccessFields {
  updatedAt: UsersDocAccessFields_updatedAt
  createdAt: UsersDocAccessFields_createdAt
  email: UsersDocAccessFields_email
  password: UsersDocAccessFields_password
}

type UsersDocAccessFields_updatedAt {
  create: UsersDocAccessFields_updatedAt_Create
  read: UsersDocAccessFields_updatedAt_Read
  update: UsersDocAccessFields_updatedAt_Update
  delete: UsersDocAccessFields_updatedAt_Delete
}

type UsersDocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type UsersDocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type UsersDocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type UsersDocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type UsersDocAccessFields_createdAt {
  create: UsersDocAccessFields_createdAt_Create
  read: UsersDocAccessFields_createdAt_Read
  update: UsersDocAccessFields_createdAt_Update
  delete: UsersDocAccessFields_createdAt_Delete
}

type UsersDocAccessFields_createdAt_Create {
  permission: Boolean!
}

type UsersDocAccessFields_createdAt_Read {
  permission: Boolean!
}

type UsersDocAccessFields_createdAt_Update {
  permission: Boolean!
}

type UsersDocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type UsersDocAccessFields_email {
  create: UsersDocAccessFields_email_Create
  read: UsersDocAccessFields_email_Read
  update: UsersDocAccessFields_email_Update
  delete: UsersDocAccessFields_email_Delete
}

type UsersDocAccessFields_email_Create {
  permission: Boolean!
}

type UsersDocAccessFields_email_Read {
  permission: Boolean!
}

type UsersDocAccessFields_email_Update {
  permission: Boolean!
}

type UsersDocAccessFields_email_Delete {
  permission: Boolean!
}

type UsersDocAccessFields_password {
  create: UsersDocAccessFields_password_Create
  read: UsersDocAccessFields_password_Read
  update: UsersDocAccessFields_password_Update
  delete: UsersDocAccessFields_password_Delete
}

type UsersDocAccessFields_password_Create {
  permission: Boolean!
}

type UsersDocAccessFields_password_Read {
  permission: Boolean!
}

type UsersDocAccessFields_password_Update {
  permission: Boolean!
}

type UsersDocAccessFields_password_Delete {
  permission: Boolean!
}

type UsersCreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type UsersReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersDeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersUnlockDocAccess {
  permission: Boolean!
  where: JSONObject
}

type usersMe {
  collection: String
  exp: Int
  token: String
  user: User
}

type CollectionA {
  id: String
  collectionB: CollectionA!
  updatedAt: DateTime
  createdAt: DateTime
}

type CollectionAS {
  docs: [CollectionA]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input CollectionA_where {
  collectionB: CollectionA_collectionB_operator
  updatedAt: CollectionA_updatedAt_operator
  createdAt: CollectionA_createdAt_operator
  id: CollectionA_id_operator
  AND: [CollectionA_where_and]
  OR: [CollectionA_where_or]
}

input CollectionA_collectionB_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

input CollectionA_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input CollectionA_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input CollectionA_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input CollectionA_where_and {
  collectionB: CollectionA_collectionB_operator
  updatedAt: CollectionA_updatedAt_operator
  createdAt: CollectionA_createdAt_operator
  id: CollectionA_id_operator
  AND: [CollectionA_where_and]
  OR: [CollectionA_where_or]
}

input CollectionA_where_or {
  collectionB: CollectionA_collectionB_operator
  updatedAt: CollectionA_updatedAt_operator
  createdAt: CollectionA_createdAt_operator
  id: CollectionA_id_operator
  AND: [CollectionA_where_and]
  OR: [CollectionA_where_or]
}

type collection_aDocAccess {
  fields: CollectionADocAccessFields
  create: CollectionACreateDocAccess
  read: CollectionAReadDocAccess
  update: CollectionAUpdateDocAccess
  delete: CollectionADeleteDocAccess
}

type CollectionADocAccessFields {
  collectionB: CollectionADocAccessFields_collectionB
  updatedAt: CollectionADocAccessFields_updatedAt
  createdAt: CollectionADocAccessFields_createdAt
}

type CollectionADocAccessFields_collectionB {
  create: CollectionADocAccessFields_collectionB_Create
  read: CollectionADocAccessFields_collectionB_Read
  update: CollectionADocAccessFields_collectionB_Update
  delete: CollectionADocAccessFields_collectionB_Delete
}

type CollectionADocAccessFields_collectionB_Create {
  permission: Boolean!
}

type CollectionADocAccessFields_collectionB_Read {
  permission: Boolean!
}

type CollectionADocAccessFields_collectionB_Update {
  permission: Boolean!
}

type CollectionADocAccessFields_collectionB_Delete {
  permission: Boolean!
}

type CollectionADocAccessFields_updatedAt {
  create: CollectionADocAccessFields_updatedAt_Create
  read: CollectionADocAccessFields_updatedAt_Read
  update: CollectionADocAccessFields_updatedAt_Update
  delete: CollectionADocAccessFields_updatedAt_Delete
}

type CollectionADocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type CollectionADocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type CollectionADocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type CollectionADocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type CollectionADocAccessFields_createdAt {
  create: CollectionADocAccessFields_createdAt_Create
  read: CollectionADocAccessFields_createdAt_Read
  update: CollectionADocAccessFields_createdAt_Update
  delete: CollectionADocAccessFields_createdAt_Delete
}

type CollectionADocAccessFields_createdAt_Create {
  permission: Boolean!
}

type CollectionADocAccessFields_createdAt_Read {
  permission: Boolean!
}

type CollectionADocAccessFields_createdAt_Update {
  permission: Boolean!
}

type CollectionADocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type CollectionACreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type CollectionAReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type CollectionAUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type CollectionADeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type CollectionB {
  id: String
  updatedAt: DateTime
  createdAt: DateTime
}

type CollectionBS {
  docs: [CollectionB]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input CollectionB_where {
  updatedAt: CollectionB_updatedAt_operator
  createdAt: CollectionB_createdAt_operator
  id: CollectionB_id_operator
  AND: [CollectionB_where_and]
  OR: [CollectionB_where_or]
}

input CollectionB_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input CollectionB_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input CollectionB_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input CollectionB_where_and {
  updatedAt: CollectionB_updatedAt_operator
  createdAt: CollectionB_createdAt_operator
  id: CollectionB_id_operator
  AND: [CollectionB_where_and]
  OR: [CollectionB_where_or]
}

input CollectionB_where_or {
  updatedAt: CollectionB_updatedAt_operator
  createdAt: CollectionB_createdAt_operator
  id: CollectionB_id_operator
  AND: [CollectionB_where_and]
  OR: [CollectionB_where_or]
}

type collection_bDocAccess {
  fields: CollectionBDocAccessFields
  create: CollectionBCreateDocAccess
  read: CollectionBReadDocAccess
  update: CollectionBUpdateDocAccess
  delete: CollectionBDeleteDocAccess
}

type CollectionBDocAccessFields {
  updatedAt: CollectionBDocAccessFields_updatedAt
  createdAt: CollectionBDocAccessFields_createdAt
}

type CollectionBDocAccessFields_updatedAt {
  create: CollectionBDocAccessFields_updatedAt_Create
  read: CollectionBDocAccessFields_updatedAt_Read
  update: CollectionBDocAccessFields_updatedAt_Update
  delete: CollectionBDocAccessFields_updatedAt_Delete
}

type CollectionBDocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type CollectionBDocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type CollectionBDocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type CollectionBDocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type CollectionBDocAccessFields_createdAt {
  create: CollectionBDocAccessFields_createdAt_Create
  read: CollectionBDocAccessFields_createdAt_Read
  update: CollectionBDocAccessFields_createdAt_Update
  delete: CollectionBDocAccessFields_createdAt_Delete
}

type CollectionBDocAccessFields_createdAt_Create {
  permission: Boolean!
}

type CollectionBDocAccessFields_createdAt_Read {
  permission: Boolean!
}

type CollectionBDocAccessFields_createdAt_Update {
  permission: Boolean!
}

type CollectionBDocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type CollectionBCreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type CollectionBReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type CollectionBUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type CollectionBDeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreference {
  id: String
  user: PayloadPreference_User_Relationship!
  key: String
  value: JSON
  updatedAt: DateTime
  createdAt: DateTime
}

type PayloadPreference_User_Relationship {
  relationTo: PayloadPreference_User_RelationTo
  value: PayloadPreference_User
}

enum PayloadPreference_User_RelationTo {
  users
}

union PayloadPreference_User = User

type PayloadPreferences {
  docs: [PayloadPreference]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input PayloadPreference_where {
  user: PayloadPreference_user_Relation
  key: PayloadPreference_key_operator
  value: PayloadPreference_value_operator
  updatedAt: PayloadPreference_updatedAt_operator
  createdAt: PayloadPreference_createdAt_operator
  id: PayloadPreference_id_operator
  AND: [PayloadPreference_where_and]
  OR: [PayloadPreference_where_or]
}

input PayloadPreference_user_Relation {
  relationTo: PayloadPreference_user_Relation_RelationTo
  value: JSON
}

enum PayloadPreference_user_Relation_RelationTo {
  users
}

input PayloadPreference_key_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input PayloadPreference_value_operator {
  equals: JSON
  not_equals: JSON
  like: JSON
  contains: JSON
  within: JSON
  intersects: JSON
  exists: Boolean
}

input PayloadPreference_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input PayloadPreference_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input PayloadPreference_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input PayloadPreference_where_and {
  user: PayloadPreference_user_Relation
  key: PayloadPreference_key_operator
  value: PayloadPreference_value_operator
  updatedAt: PayloadPreference_updatedAt_operator
  createdAt: PayloadPreference_createdAt_operator
  id: PayloadPreference_id_operator
  AND: [PayloadPreference_where_and]
  OR: [PayloadPreference_where_or]
}

input PayloadPreference_where_or {
  user: PayloadPreference_user_Relation
  key: PayloadPreference_key_operator
  value: PayloadPreference_value_operator
  updatedAt: PayloadPreference_updatedAt_operator
  createdAt: PayloadPreference_createdAt_operator
  id: PayloadPreference_id_operator
  AND: [PayloadPreference_where_and]
  OR: [PayloadPreference_where_or]
}

type payload_preferencesDocAccess {
  fields: PayloadPreferencesDocAccessFields
  create: PayloadPreferencesCreateDocAccess
  read: PayloadPreferencesReadDocAccess
  update: PayloadPreferencesUpdateDocAccess
  delete: PayloadPreferencesDeleteDocAccess
}

type PayloadPreferencesDocAccessFields {
  user: PayloadPreferencesDocAccessFields_user
  key: PayloadPreferencesDocAccessFields_key
  value: PayloadPreferencesDocAccessFields_value
  updatedAt: PayloadPreferencesDocAccessFields_updatedAt
  createdAt: PayloadPreferencesDocAccessFields_createdAt
}

type PayloadPreferencesDocAccessFields_user {
  create: PayloadPreferencesDocAccessFields_user_Create
  read: PayloadPreferencesDocAccessFields_user_Read
  update: PayloadPreferencesDocAccessFields_user_Update
  delete: PayloadPreferencesDocAccessFields_user_Delete
}

type PayloadPreferencesDocAccessFields_user_Create {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_user_Read {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_user_Update {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_user_Delete {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_key {
  create: PayloadPreferencesDocAccessFields_key_Create
  read: PayloadPreferencesDocAccessFields_key_Read
  update: PayloadPreferencesDocAccessFields_key_Update
  delete: PayloadPreferencesDocAccessFields_key_Delete
}

type PayloadPreferencesDocAccessFields_key_Create {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_key_Read {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_key_Update {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_key_Delete {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_value {
  create: PayloadPreferencesDocAccessFields_value_Create
  read: PayloadPreferencesDocAccessFields_value_Read
  update: PayloadPreferencesDocAccessFields_value_Update
  delete: PayloadPreferencesDocAccessFields_value_Delete
}

type PayloadPreferencesDocAccessFields_value_Create {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_value_Read {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_value_Update {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_value_Delete {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_updatedAt {
  create: PayloadPreferencesDocAccessFields_updatedAt_Create
  read: PayloadPreferencesDocAccessFields_updatedAt_Read
  update: PayloadPreferencesDocAccessFields_updatedAt_Update
  delete: PayloadPreferencesDocAccessFields_updatedAt_Delete
}

type PayloadPreferencesDocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_createdAt {
  create: PayloadPreferencesDocAccessFields_createdAt_Create
  read: PayloadPreferencesDocAccessFields_createdAt_Read
  update: PayloadPreferencesDocAccessFields_createdAt_Update
  delete: PayloadPreferencesDocAccessFields_createdAt_Delete
}

type PayloadPreferencesDocAccessFields_createdAt_Create {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_createdAt_Read {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_createdAt_Update {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type PayloadPreferencesCreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesDeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type Access {
  canAccessAdmin: Boolean!
  users: usersAccess
  collection_a: collection_aAccess
  collection_b: collection_bAccess
  payload_preferences: payload_preferencesAccess
}

type usersAccess {
  fields: UsersFields
  create: UsersCreateAccess
  read: UsersReadAccess
  update: UsersUpdateAccess
  delete: UsersDeleteAccess
  unlock: UsersUnlockAccess
}

type UsersFields {
  updatedAt: UsersFields_updatedAt
  createdAt: UsersFields_createdAt
  email: UsersFields_email
  password: UsersFields_password
}

type UsersFields_updatedAt {
  create: UsersFields_updatedAt_Create
  read: UsersFields_updatedAt_Read
  update: UsersFields_updatedAt_Update
  delete: UsersFields_updatedAt_Delete
}

type UsersFields_updatedAt_Create {
  permission: Boolean!
}

type UsersFields_updatedAt_Read {
  permission: Boolean!
}

type UsersFields_updatedAt_Update {
  permission: Boolean!
}

type UsersFields_updatedAt_Delete {
  permission: Boolean!
}

type UsersFields_createdAt {
  create: UsersFields_createdAt_Create
  read: UsersFields_createdAt_Read
  update: UsersFields_createdAt_Update
  delete: UsersFields_createdAt_Delete
}

type UsersFields_createdAt_Create {
  permission: Boolean!
}

type UsersFields_createdAt_Read {
  permission: Boolean!
}

type UsersFields_createdAt_Update {
  permission: Boolean!
}

type UsersFields_createdAt_Delete {
  permission: Boolean!
}

type UsersFields_email {
  create: UsersFields_email_Create
  read: UsersFields_email_Read
  update: UsersFields_email_Update
  delete: UsersFields_email_Delete
}

type UsersFields_email_Create {
  permission: Boolean!
}

type UsersFields_email_Read {
  permission: Boolean!
}

type UsersFields_email_Update {
  permission: Boolean!
}

type UsersFields_email_Delete {
  permission: Boolean!
}

type UsersFields_password {
  create: UsersFields_password_Create
  read: UsersFields_password_Read
  update: UsersFields_password_Update
  delete: UsersFields_password_Delete
}

type UsersFields_password_Create {
  permission: Boolean!
}

type UsersFields_password_Read {
  permission: Boolean!
}

type UsersFields_password_Update {
  permission: Boolean!
}

type UsersFields_password_Delete {
  permission: Boolean!
}

type UsersCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersReadAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersUnlockAccess {
  permission: Boolean!
  where: JSONObject
}

type collection_aAccess {
  fields: CollectionAFields
  create: CollectionACreateAccess
  read: CollectionAReadAccess
  update: CollectionAUpdateAccess
  delete: CollectionADeleteAccess
}

type CollectionAFields {
  collectionB: CollectionAFields_collectionB
  updatedAt: CollectionAFields_updatedAt
  createdAt: CollectionAFields_createdAt
}

type CollectionAFields_collectionB {
  create: CollectionAFields_collectionB_Create
  read: CollectionAFields_collectionB_Read
  update: CollectionAFields_collectionB_Update
  delete: CollectionAFields_collectionB_Delete
}

type CollectionAFields_collectionB_Create {
  permission: Boolean!
}

type CollectionAFields_collectionB_Read {
  permission: Boolean!
}

type CollectionAFields_collectionB_Update {
  permission: Boolean!
}

type CollectionAFields_collectionB_Delete {
  permission: Boolean!
}

type CollectionAFields_updatedAt {
  create: CollectionAFields_updatedAt_Create
  read: CollectionAFields_updatedAt_Read
  update: CollectionAFields_updatedAt_Update
  delete: CollectionAFields_updatedAt_Delete
}

type CollectionAFields_updatedAt_Create {
  permission: Boolean!
}

type CollectionAFields_updatedAt_Read {
  permission: Boolean!
}

type CollectionAFields_updatedAt_Update {
  permission: Boolean!
}

type CollectionAFields_updatedAt_Delete {
  permission: Boolean!
}

type CollectionAFields_createdAt {
  create: CollectionAFields_createdAt_Create
  read: CollectionAFields_createdAt_Read
  update: CollectionAFields_createdAt_Update
  delete: CollectionAFields_createdAt_Delete
}

type CollectionAFields_createdAt_Create {
  permission: Boolean!
}

type CollectionAFields_createdAt_Read {
  permission: Boolean!
}

type CollectionAFields_createdAt_Update {
  permission: Boolean!
}

type CollectionAFields_createdAt_Delete {
  permission: Boolean!
}

type CollectionACreateAccess {
  permission: Boolean!
  where: JSONObject
}

type CollectionAReadAccess {
  permission: Boolean!
  where: JSONObject
}

type CollectionAUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type CollectionADeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type collection_bAccess {
  fields: CollectionBFields
  create: CollectionBCreateAccess
  read: CollectionBReadAccess
  update: CollectionBUpdateAccess
  delete: CollectionBDeleteAccess
}

type CollectionBFields {
  updatedAt: CollectionBFields_updatedAt
  createdAt: CollectionBFields_createdAt
}

type CollectionBFields_updatedAt {
  create: CollectionBFields_updatedAt_Create
  read: CollectionBFields_updatedAt_Read
  update: CollectionBFields_updatedAt_Update
  delete: CollectionBFields_updatedAt_Delete
}

type CollectionBFields_updatedAt_Create {
  permission: Boolean!
}

type CollectionBFields_updatedAt_Read {
  permission: Boolean!
}

type CollectionBFields_updatedAt_Update {
  permission: Boolean!
}

type CollectionBFields_updatedAt_Delete {
  permission: Boolean!
}

type CollectionBFields_createdAt {
  create: CollectionBFields_createdAt_Create
  read: CollectionBFields_createdAt_Read
  update: CollectionBFields_createdAt_Update
  delete: CollectionBFields_createdAt_Delete
}

type CollectionBFields_createdAt_Create {
  permission: Boolean!
}

type CollectionBFields_createdAt_Read {
  permission: Boolean!
}

type CollectionBFields_createdAt_Update {
  permission: Boolean!
}

type CollectionBFields_createdAt_Delete {
  permission: Boolean!
}

type CollectionBCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type CollectionBReadAccess {
  permission: Boolean!
  where: JSONObject
}

type CollectionBUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type CollectionBDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type payload_preferencesAccess {
  fields: PayloadPreferencesFields
  create: PayloadPreferencesCreateAccess
  read: PayloadPreferencesReadAccess
  update: PayloadPreferencesUpdateAccess
  delete: PayloadPreferencesDeleteAccess
}

type PayloadPreferencesFields {
  user: PayloadPreferencesFields_user
  key: PayloadPreferencesFields_key
  value: PayloadPreferencesFields_value
  updatedAt: PayloadPreferencesFields_updatedAt
  createdAt: PayloadPreferencesFields_createdAt
}

type PayloadPreferencesFields_user {
  create: PayloadPreferencesFields_user_Create
  read: PayloadPreferencesFields_user_Read
  update: PayloadPreferencesFields_user_Update
  delete: PayloadPreferencesFields_user_Delete
}

type PayloadPreferencesFields_user_Create {
  permission: Boolean!
}

type PayloadPreferencesFields_user_Read {
  permission: Boolean!
}

type PayloadPreferencesFields_user_Update {
  permission: Boolean!
}

type PayloadPreferencesFields_user_Delete {
  permission: Boolean!
}

type PayloadPreferencesFields_key {
  create: PayloadPreferencesFields_key_Create
  read: PayloadPreferencesFields_key_Read
  update: PayloadPreferencesFields_key_Update
  delete: PayloadPreferencesFields_key_Delete
}

type PayloadPreferencesFields_key_Create {
  permission: Boolean!
}

type PayloadPreferencesFields_key_Read {
  permission: Boolean!
}

type PayloadPreferencesFields_key_Update {
  permission: Boolean!
}

type PayloadPreferencesFields_key_Delete {
  permission: Boolean!
}

type PayloadPreferencesFields_value {
  create: PayloadPreferencesFields_value_Create
  read: PayloadPreferencesFields_value_Read
  update: PayloadPreferencesFields_value_Update
  delete: PayloadPreferencesFields_value_Delete
}

type PayloadPreferencesFields_value_Create {
  permission: Boolean!
}

type PayloadPreferencesFields_value_Read {
  permission: Boolean!
}

type PayloadPreferencesFields_value_Update {
  permission: Boolean!
}

type PayloadPreferencesFields_value_Delete {
  permission: Boolean!
}

type PayloadPreferencesFields_updatedAt {
  create: PayloadPreferencesFields_updatedAt_Create
  read: PayloadPreferencesFields_updatedAt_Read
  update: PayloadPreferencesFields_updatedAt_Update
  delete: PayloadPreferencesFields_updatedAt_Delete
}

type PayloadPreferencesFields_updatedAt_Create {
  permission: Boolean!
}

type PayloadPreferencesFields_updatedAt_Read {
  permission: Boolean!
}

type PayloadPreferencesFields_updatedAt_Update {
  permission: Boolean!
}

type PayloadPreferencesFields_updatedAt_Delete {
  permission: Boolean!
}

type PayloadPreferencesFields_createdAt {
  create: PayloadPreferencesFields_createdAt_Create
  read: PayloadPreferencesFields_createdAt_Read
  update: PayloadPreferencesFields_createdAt_Update
  delete: PayloadPreferencesFields_createdAt_Delete
}

type PayloadPreferencesFields_createdAt_Create {
  permission: Boolean!
}

type PayloadPreferencesFields_createdAt_Read {
  permission: Boolean!
}

type PayloadPreferencesFields_createdAt_Update {
  permission: Boolean!
}

type PayloadPreferencesFields_createdAt_Delete {
  permission: Boolean!
}

type PayloadPreferencesCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesReadAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type Mutation {
  createUser(data: mutationUserInput!, draft: Boolean): User
  updateUser(id: String!, autosave: Boolean, data: mutationUserUpdateInput!, draft: Boolean): User
  deleteUser(id: String!): User
  refreshTokenUser(token: String): usersRefreshedUser
  logoutUser: String
  unlockUser(email: String!): Boolean!
  loginUser(email: String, password: String): usersLoginResult
  forgotPasswordUser(disableEmail: Boolean, email: String!, expiration: Int): Boolean!
  resetPasswordUser(password: String, token: String): usersResetPassword
  verifyEmailUser(token: String): Boolean
  createCollectionA(data: mutationCollectionAInput!, draft: Boolean): CollectionA
  updateCollectionA(id: String!, autosave: Boolean, data: mutationCollectionAUpdateInput!, draft: Boolean): CollectionA
  deleteCollectionA(id: String!): CollectionA
  createCollectionB(data: mutationCollectionBInput!, draft: Boolean): CollectionB
  updateCollectionB(id: String!, autosave: Boolean, data: mutationCollectionBUpdateInput!, draft: Boolean): CollectionB
  deleteCollectionB(id: String!): CollectionB
  createPayloadPreference(data: mutationPayloadPreferenceInput!, draft: Boolean): PayloadPreference
  updatePayloadPreference(id: String!, autosave: Boolean, data: mutationPayloadPreferenceUpdateInput!, draft: Boolean): PayloadPreference
  deletePayloadPreference(id: String!): PayloadPreference
}

input mutationUserInput {
  updatedAt: String
  createdAt: String
  email: String!
  resetPasswordToken: String
  resetPasswordExpiration: String
  salt: String
  hash: String
  loginAttempts: Float
  lockUntil: String
  password: String!
}

input mutationUserUpdateInput {
  updatedAt: String
  createdAt: String
  email: String
  resetPasswordToken: String
  resetPasswordExpiration: String
  salt: String
  hash: String
  loginAttempts: Float
  lockUntil: String
  password: String
}

type usersRefreshedUser {
  exp: Int
  refreshedToken: String
  user: usersJWT
}

type usersJWT {
  email: EmailAddress!
  collection: String!
}

type usersLoginResult {
  exp: Int
  token: String
  user: User
}

type usersResetPassword {
  token: String
  user: User
}

input mutationCollectionAInput {
  collectionB: String
  updatedAt: String
  createdAt: String
}

input mutationCollectionAUpdateInput {
  collectionB: String
  updatedAt: String
  createdAt: String
}

input mutationCollectionBInput {
  updatedAt: String
  createdAt: String
}

input mutationCollectionBUpdateInput {
  updatedAt: String
  createdAt: String
}

input mutationPayloadPreferenceInput {
  user: PayloadPreference_UserRelationshipInput
  key: String
  value: JSON
  updatedAt: String
  createdAt: String
}

input PayloadPreference_UserRelationshipInput {
  relationTo: PayloadPreference_UserRelationshipInputRelationTo
  value: JSON
}

enum PayloadPreference_UserRelationshipInputRelationTo {
  users
}

input mutationPayloadPreferenceUpdateInput {
  user: PayloadPreferenceUpdate_UserRelationshipInput
  key: String
  value: JSON
  updatedAt: String
  createdAt: String
}

input PayloadPreferenceUpdate_UserRelationshipInput {
  relationTo: PayloadPreferenceUpdate_UserRelationshipInputRelationTo
  value: JSON
}

enum PayloadPreferenceUpdate_UserRelationshipInputRelationTo {
  users
}